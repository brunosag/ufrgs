//-----------------------------
// Quest√£o 1, item d
//-----------------------------
// f(x) = 2^x
//-----------------------------

// A := 0
operation clear(A) {
  1: if zero A then goto 0 else goto 2
  2: do dec A goto 1
}

// A := A + B; B := 0
operation dump(A, B) {
  1: if zero B then goto 0 else goto 2
  2: do dec B goto 3
  3: do inc A goto 1 
}

// A := A + B (usando B_1)
operation add(A, B, B_1) {
  1: do dump(B_1, B) goto 2
  2: if zero B_1 then goto 0 else goto 3
  3: do dec B_1 goto 4
  4: do inc A goto 5
  5: do inc B goto 2
}

// A := B (usando B_1)
operation copy(A, B, B_1) {
  1: do clear(A) goto 2
  2: do add(A, B, B_1) goto 0
}

// A := A * B (usando A_1, B_1, AUX1)
operation multiply(A, B, A_1, B_1, AUX1) {
  1: do dump(A_1, A) goto 2
  2: do copy(B_1, B, AUX1) goto 3
  3: if zero B_1 then goto 6 else goto 4
  4: do dec B_1 goto 5
  5: do add(A, A_1, AUX1) goto 3
  6: do clear(A_1) goto 0
}

// A := A^B (usando A_1, B_1, AUX1, AUX2, AUX3)
operation power(A, B, A_1, B_1, AUX1, AUX2, AUX3) {
  1: do dump(A_1, A) goto 2
  2: do inc A goto 3
  3: do copy(B_1, B, AUX1) goto 4
  4: if zero B_1 then goto 7 else goto 5
  5: do dec B_1 goto 6
  6: do multiply(A, A_1, AUX1, AUX2, AUX3) goto 4
  7: do clear(A_1) goto 0
}

main {
  1: do copy(B, X, AUX1) goto 2
  2: do add A 2 goto 3
  3: do power(A, B, AUX1, AUX2, AUX3, AUX4, AUX5) goto 4
  4: do dump(Y, A) goto 5
  5: do clear(B) goto 0
}

